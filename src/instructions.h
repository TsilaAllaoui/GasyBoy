#ifndef INSTRUCTIONS_H
#define INSTRUCTIONS_H

#include <cstdint>
#include "cpu.h"

namespace gasyboy
{
    class Cpu;

    using InstrFunc = void (Cpu::*)();

    struct Instruction
    {
        const char *mnemonic; // The instruction’s mnemonic as a C string.
        uint8_t length;       // Number of bytes this instruction uses.
        uint8_t cycles;       // Number of CPU cycles this instruction takes.
        InstrFunc execute;    // Pointer to the method that implements the opcode.
    };

    constexpr InstrFunc UNDEFINED = &Cpu::NOP;

    constexpr Instruction instructionSet[256] = {
        // 0x00 - 0x0F
        {"NOP", 1, 4, &Cpu::Opcode_00},
        {"LD BC,nn", 3, 12, &Cpu::Opcode_01},
        {"LD (BC),A", 1, 8, &Cpu::Opcode_02},
        {"INC BC", 1, 8, &Cpu::Opcode_03},
        {"INC B", 1, 4, &Cpu::Opcode_04},
        {"DEC B", 1, 4, &Cpu::Opcode_05},
        {"LD B,n", 2, 8, &Cpu::Opcode_06},
        {"RLCA", 1, 4, &Cpu::Opcode_07},
        {"LD (nn),SP", 3, 20, &Cpu::Opcode_08},
        {"ADD HL,BC", 1, 8, &Cpu::Opcode_09},
        {"LD A,(BC)", 1, 8, &Cpu::Opcode_0A},
        {"DEC BC", 1, 8, &Cpu::Opcode_0B},
        {"INC C", 1, 4, &Cpu::Opcode_0C},
        {"DEC C", 1, 4, &Cpu::Opcode_0D},
        {"LD C,n", 2, 8, &Cpu::Opcode_0E},
        {"RRCA", 1, 4, &Cpu::Opcode_0F},

        // 0x10 - 0x1F
        {"STOP", 2, 4, &Cpu::Opcode_10},
        {"LD DE,nn", 3, 12, &Cpu::Opcode_11},
        {"LD (DE),A", 1, 8, &Cpu::Opcode_12},
        {"INC DE", 1, 8, &Cpu::Opcode_13},
        {"INC D", 1, 4, &Cpu::Opcode_14},
        {"DEC D", 1, 4, &Cpu::Opcode_15},
        {"LD D,n", 2, 8, &Cpu::Opcode_16},
        {"RLA", 1, 4, &Cpu::Opcode_17},
        {"JR e", 2, 12, &Cpu::Opcode_18},
        {"ADD HL,DE", 1, 8, &Cpu::Opcode_19},
        {"LD A,(DE)", 1, 8, &Cpu::Opcode_1A},
        {"DEC DE", 1, 8, &Cpu::Opcode_1B},
        {"INC E", 1, 4, &Cpu::Opcode_1C},
        {"DEC E", 1, 4, &Cpu::Opcode_1D},
        {"LD E,n", 2, 8, &Cpu::Opcode_1E},
        {"RRA", 1, 4, &Cpu::Opcode_1F},

        // 0x20 - 0x2F
        {"JR NZ,e", 2, 12, &Cpu::Opcode_20},
        {"LD HL,nn", 3, 12, &Cpu::Opcode_21},
        {"LD (HL+),A", 1, 8, &Cpu::Opcode_22}, // Assumes post-increment of HL handled externally.
        {"INC HL", 1, 8, &Cpu::Opcode_23},
        {"INC H", 1, 4, &Cpu::Opcode_24},
        {"DEC H", 1, 4, &Cpu::Opcode_25},
        {"LD H,n", 2, 8, &Cpu::Opcode_26},
        {"DAA", 1, 4, &Cpu::Opcode_27},
        {"JR Z,e", 2, 12, &Cpu::Opcode_28},
        {"ADD HL,HL", 1, 8, &Cpu::Opcode_29}, // (Not standard—adjust if needed.)
        {"LD A,(HL+)", 1, 8, &Cpu::Opcode_2A},
        {"DEC HL", 1, 8, &Cpu::Opcode_2B},
        {"INC L", 1, 4, &Cpu::Opcode_2C},
        {"DEC L", 1, 4, &Cpu::Opcode_2D},
        {"LD L,n", 2, 8, &Cpu::Opcode_2E},
        {"CPL", 1, 4, &Cpu::Opcode_2F},

        // 0x30 - 0x3F
        {"JR NC,e", 2, 12, &Cpu::Opcode_30},
        {"LD SP,nn", 3, 12, &Cpu::Opcode_31},
        {"LD (HL),A", 1, 8, &Cpu::Opcode_32},
        {"INC SP", 1, 8, &Cpu::Opcode_33},
        {"INC A", 1, 4, &Cpu::Opcode_34},
        {"DEC A", 1, 4, &Cpu::Opcode_35},
        {"LD A,n", 2, 8, &Cpu::Opcode_36},
        {"SCF", 1, 4, &Cpu::Opcode_37},
        {"JR C,e", 2, 12, &Cpu::Opcode_38},
        {"ADD HL,SP", 1, 8, &Cpu::Opcode_39},
        {"LD A,(HL)", 1, 8, &Cpu::Opcode_3A},
        {"DEC SP", 1, 8, &Cpu::Opcode_3B},
        {"INC A", 1, 4, &Cpu::Opcode_3C},
        {"DEC A", 1, 4, &Cpu::Opcode_3D},
        {"LD A,n", 2, 8, &Cpu::Opcode_3E},
        {"CCF", 1, 4, &Cpu::Opcode_3F},

        // 0x40 - 0x4F
        {"LD B,B", 1, 4, &Cpu::Opcode_40},
        {"LD B,C", 1, 4, &Cpu::Opcode_41},
        {"LD B,D", 1, 4, &Cpu::Opcode_42},
        {"LD B,E", 1, 4, &Cpu::Opcode_43},
        {"LD B,H", 1, 4, &Cpu::Opcode_44},
        {"LD B,L", 1, 4, &Cpu::Opcode_45},
        {"LD B,(HL)", 1, 8, &Cpu::Opcode_46},
        {"LD B,A", 1, 4, &Cpu::Opcode_47},
        {"LD C,B", 1, 4, &Cpu::Opcode_48},
        {"LD C,C", 1, 4, &Cpu::Opcode_49},
        {"LD C,D", 1, 4, &Cpu::Opcode_4A},
        {"LD C,E", 1, 4, &Cpu::Opcode_4B},
        {"LD C,H", 1, 4, &Cpu::Opcode_4C},
        {"LD C,L", 1, 4, &Cpu::Opcode_4D},
        {"LD C,(HL)", 1, 8, &Cpu::Opcode_4E},
        {"LD C,A", 1, 4, &Cpu::Opcode_4F},

        // 0x50 - 0x5F
        {"LD D,B", 1, 4, &Cpu::Opcode_50},
        {"LD D,C", 1, 4, &Cpu::Opcode_51},
        {"LD D,D", 1, 4, &Cpu::Opcode_52},
        {"LD D,E", 1, 4, &Cpu::Opcode_53},
        {"LD D,H", 1, 4, &Cpu::Opcode_54},
        {"LD D,L", 1, 4, &Cpu::Opcode_55},
        {"LD D,(HL)", 1, 8, &Cpu::Opcode_56},
        {"LD D,A", 1, 4, &Cpu::Opcode_57},
        {"LD E,B", 1, 4, &Cpu::Opcode_58},
        {"LD E,C", 1, 4, &Cpu::Opcode_59},
        {"LD E,D", 1, 4, &Cpu::Opcode_5A},
        {"LD E,E", 1, 4, &Cpu::Opcode_5B},
        {"LD E,H", 1, 4, &Cpu::Opcode_5C},
        {"LD E,L", 1, 4, &Cpu::Opcode_5D},
        {"LD E,(HL)", 1, 8, &Cpu::Opcode_5E},
        {"LD E,A", 1, 4, &Cpu::Opcode_5F},

        // 0x60 - 0x6F
        {"LD H,B", 1, 4, &Cpu::Opcode_60},
        {"LD H,C", 1, 4, &Cpu::Opcode_61},
        {"LD H,D", 1, 4, &Cpu::Opcode_62},
        {"LD H,E", 1, 4, &Cpu::Opcode_63},
        {"LD H,H", 1, 4, &Cpu::Opcode_64},
        {"LD H,L", 1, 4, &Cpu::Opcode_65},
        {"LD H,(HL)", 1, 8, &Cpu::Opcode_66},
        {"LD H,A", 1, 4, &Cpu::Opcode_67},
        {"LD L,B", 1, 4, &Cpu::Opcode_68},
        {"LD L,C", 1, 4, &Cpu::Opcode_69},
        {"LD L,D", 1, 4, &Cpu::Opcode_6A},
        {"LD L,E", 1, 4, &Cpu::Opcode_6B},
        {"LD L,H", 1, 4, &Cpu::Opcode_6C},
        {"LD L,L", 1, 4, &Cpu::Opcode_6D},
        {"LD L,(HL)", 1, 8, &Cpu::Opcode_6E},
        {"LD L,A", 1, 4, &Cpu::Opcode_6F},

        // 0x70 - 0x7F
        {"LD (HL),B", 1, 8, &Cpu::Opcode_70},
        {"LD (HL),C", 1, 8, &Cpu::Opcode_71},
        {"LD (HL),D", 1, 8, &Cpu::Opcode_72},
        {"LD (HL),E", 1, 8, &Cpu::Opcode_73},
        {"LD (HL),H", 1, 8, &Cpu::Opcode_74},
        {"LD (HL),L", 1, 8, &Cpu::Opcode_75},
        {"HALT", 1, 4, &Cpu::Opcode_76},
        {"LD (HL),A", 1, 8, &Cpu::Opcode_77},
        {"LD A,B", 1, 4, &Cpu::Opcode_78},
        {"LD A,C", 1, 4, &Cpu::Opcode_79},
        {"LD A,D", 1, 4, &Cpu::Opcode_7A},
        {"LD A,E", 1, 4, &Cpu::Opcode_7B},
        {"LD A,H", 1, 4, &Cpu::Opcode_7C},
        {"LD A,L", 1, 4, &Cpu::Opcode_7D},
        {"LD A,(HL)", 1, 8, &Cpu::Opcode_7E},
        {"LD A,A", 1, 4, &Cpu::Opcode_7F},

        // 0x80 - 0x8F
        {"ADD A,B", 1, 4, &Cpu::Opcode_80},
        {"ADD A,C", 1, 4, &Cpu::Opcode_81},
        {"ADD A,D", 1, 4, &Cpu::Opcode_82},
        {"ADD A,E", 1, 4, &Cpu::Opcode_83},
        {"ADD A,H", 1, 4, &Cpu::Opcode_84},
        {"ADD A,L", 1, 4, &Cpu::Opcode_85},
        {"ADD A,(HL)", 1, 8, &Cpu::Opcode_86},
        {"ADD A,A", 1, 4, &Cpu::Opcode_87},
        {"ADC A,B", 1, 4, &Cpu::Opcode_88},
        {"ADC A,C", 1, 4, &Cpu::Opcode_89},
        {"ADC A,D", 1, 4, &Cpu::Opcode_8A},
        {"ADC A,E", 1, 4, &Cpu::Opcode_8B},
        {"ADC A,H", 1, 4, &Cpu::Opcode_8C},
        {"ADC A,L", 1, 4, &Cpu::Opcode_8D},
        {"ADC A,(HL)", 1, 8, &Cpu::Opcode_8E},
        {"ADC A,A", 1, 4, &Cpu::Opcode_8F},

        // 0x90 - 0x9F
        {"SUB B", 1, 4, &Cpu::Opcode_90},
        {"SUB C", 1, 4, &Cpu::Opcode_91},
        {"SUB D", 1, 4, &Cpu::Opcode_92},
        {"SUB E", 1, 4, &Cpu::Opcode_93},
        {"SUB H", 1, 4, &Cpu::Opcode_94},
        {"SUB L", 1, 4, &Cpu::Opcode_95},
        {"SUB (HL)", 1, 8, &Cpu::Opcode_96},
        {"SUB A", 1, 4, &Cpu::Opcode_97},
        {"SBC A,B", 1, 4, &Cpu::Opcode_98},
        {"SBC A,C", 1, 4, &Cpu::Opcode_99},
        {"SBC A,D", 1, 4, &Cpu::Opcode_9A},
        {"SBC A,E", 1, 4, &Cpu::Opcode_9B},
        {"SBC A,H", 1, 4, &Cpu::Opcode_9C},
        {"SBC A,L", 1, 4, &Cpu::Opcode_9D},
        {"SBC A,(HL)", 1, 8, &Cpu::Opcode_9E},
        {"SBC A,A", 1, 4, &Cpu::Opcode_9F},

        // 0xA0 - 0xAF
        {"AND B", 1, 4, &Cpu::Opcode_A0},
        {"AND C", 1, 4, &Cpu::Opcode_A1},
        {"AND D", 1, 4, &Cpu::Opcode_A2},
        {"AND E", 1, 4, &Cpu::Opcode_A3},
        {"AND H", 1, 4, &Cpu::Opcode_A4},
        {"AND L", 1, 4, &Cpu::Opcode_A5},
        {"AND (HL)", 1, 8, &Cpu::Opcode_A6},
        {"AND A", 1, 4, &Cpu::Opcode_A7},
        {"XOR B", 1, 4, &Cpu::Opcode_A8},
        {"XOR C", 1, 4, &Cpu::Opcode_A9},
        {"XOR D", 1, 4, &Cpu::Opcode_AA},
        {"XOR E", 1, 4, &Cpu::Opcode_AB},
        {"XOR H", 1, 4, &Cpu::Opcode_AC},
        {"XOR L", 1, 4, &Cpu::Opcode_AD},
        {"XOR (HL)", 1, 8, &Cpu::Opcode_AE},
        {"XOR A", 1, 4, &Cpu::Opcode_AF},

        // 0xB0 - 0xBF
        {"OR B", 1, 4, &Cpu::Opcode_B0},
        {"OR C", 1, 4, &Cpu::Opcode_B1},
        {"OR D", 1, 4, &Cpu::Opcode_B2},
        {"OR E", 1, 4, &Cpu::Opcode_B3},
        {"OR H", 1, 4, &Cpu::Opcode_B4},
        {"OR L", 1, 4, &Cpu::Opcode_B5},
        {"OR (HL)", 1, 8, &Cpu::Opcode_B6},
        {"OR A", 1, 4, &Cpu::Opcode_B7},
        {"CP B", 1, 4, &Cpu::Opcode_B8},
        {"CP C", 1, 4, &Cpu::Opcode_B9},
        {"CP D", 1, 4, &Cpu::Opcode_BA},
        {"CP E", 1, 4, &Cpu::Opcode_BB},
        {"CP H", 1, 4, &Cpu::Opcode_BC},
        {"CP L", 1, 4, &Cpu::Opcode_BD},
        {"CP (HL)", 1, 8, &Cpu::Opcode_BE},
        {"CP A", 1, 4, &Cpu::Opcode_BF},

        // 0xC0 - 0xCF
        {"RET NZ", 1, 20, &Cpu::Opcode_C0},
        {"POP BC", 1, 12, &Cpu::Opcode_C1},
        {"JP NZ,nn", 3, 12, &Cpu::Opcode_C2},
        {"JP nn", 3, 16, &Cpu::Opcode_C3},
        {"CALL NZ", 3, 12, &Cpu::Opcode_C4},
        {"PUSH BC", 1, 16, &Cpu::Opcode_C5},
        {"ADD A,n", 2, 8, &Cpu::Opcode_C6},
        {"RST 00H", 1, 16, &Cpu::Opcode_C7},
        {"RET Z", 1, 20, &Cpu::Opcode_C8},
        {"RET", 1, 16, &Cpu::Opcode_C9},
        {"JP Z,nn", 3, 12, &Cpu::Opcode_CA},
        {"UNDEFINED", 0, 0, nullptr}, // 0xCB prefix handled separately
        {"CALL Z", 3, 12, &Cpu::Opcode_CC},
        {"CALL", 3, 16, &Cpu::Opcode_CD},
        {"ADC A,n", 2, 8, &Cpu::Opcode_CE},
        {"RST 08H", 1, 16, &Cpu::Opcode_CF},

        // 0xD0 - 0xDF
        {"RET NC", 1, 20, &Cpu::Opcode_D0},
        {"POP DE", 1, 12, &Cpu::Opcode_D1},
        {"JP NC,nn", 3, 12, &Cpu::Opcode_D2},
        {"UNDEFINED", 0, 0, nullptr}, // 0xD3
        {"CALL NC", 3, 12, &Cpu::Opcode_D4},
        {"PUSH DE", 1, 16, &Cpu::Opcode_D5},
        {"SUB n", 2, 8, &Cpu::Opcode_D6},
        {"RST 10H", 1, 16, &Cpu::Opcode_D7},
        {"RET C", 1, 20, &Cpu::Opcode_D8},
        {"RETI", 1, 16, &Cpu::Opcode_D9},
        {"JP C,nn", 3, 12, &Cpu::Opcode_DA},
        {"UNDEFINED", 0, 0, nullptr}, // 0xDB
        {"CALL C", 3, 12, &Cpu::Opcode_DC},
        {"UNDEFINED", 0, 0, nullptr}, // 0xDD
        {"SBC A,n", 2, 8, &Cpu::Opcode_DE},
        {"RST 18H", 1, 16, &Cpu::Opcode_DF},

        // 0xE0 - 0xEF
        {"LDH (n),A", 2, 12, &Cpu::Opcode_E0},
        {"POP HL", 1, 12, &Cpu::Opcode_E1},
        {"LDH (C),A", 1, 8, &Cpu::Opcode_E2},
        {"UNDEFINED", 0, 0, nullptr}, // 0xE3
        {"UNDEFINED", 0, 0, nullptr}, // 0xE4
        {"PUSH HL", 1, 16, &Cpu::Opcode_E5},
        {"AND n", 2, 8, &Cpu::Opcode_E6},
        {"RST 20H", 1, 16, &Cpu::Opcode_E7},
        {"ADD SP,n", 2, 16, &Cpu::Opcode_E8},
        {"JP (HL)", 1, 4, &Cpu::Opcode_E9},
        {"LD (nn),A", 3, 16, &Cpu::Opcode_EA},
        {"UNDEFINED", 0, 0, nullptr}, // 0xEB
        {"UNDEFINED", 0, 0, nullptr}, // 0xEC
        {"UNDEFINED", 0, 0, nullptr}, // 0xED
        {"XOR n", 2, 8, &Cpu::Opcode_EE},
        {"RST 28H", 1, 16, &Cpu::Opcode_EF},

        // 0xF0 - 0xFF
        {"LDH A,(n)", 2, 12, &Cpu::Opcode_F0},
        {"POP AF", 1, 12, &Cpu::Opcode_F1},
        {"LDH A,(C)", 1, 8, &Cpu::Opcode_F2},
        {"DI", 1, 4, &Cpu::Opcode_F3},
        {"UNDEFINED", 0, 0, nullptr}, // 0xF4
        {"PUSH AF", 1, 16, &Cpu::Opcode_F5},
        {"OR n", 2, 8, &Cpu::Opcode_F6},
        {"RST 30H", 1, 16, &Cpu::Opcode_F7},
        {"LD A,(n)", 2, 12, &Cpu::Opcode_F8},
        {"LD SP,HL", 1, 8, &Cpu::Opcode_F9},
        {"LD A,(nn)", 3, 16, &Cpu::Opcode_FA},
        {"EI", 1, 4, &Cpu::Opcode_FB},
        {"UNDEFINED", 0, 0, nullptr}, // 0xFC
        {"UNDEFINED", 0, 0, nullptr}, // 0xFD
        {"CP n", 2, 8, &Cpu::Opcode_FE},
        {"RST 38H", 1, 16, &Cpu::Opcode_FF}};

    constexpr Instruction instructionSetCB[256] = {
        // 0x00 - 0x07: RLC r
        {"RLC B", 2, 8, &Cpu::Opcode_CB_00},
        {"RLC C", 2, 8, &Cpu::Opcode_CB_01},
        {"RLC D", 2, 8, &Cpu::Opcode_CB_02},
        {"RLC E", 2, 8, &Cpu::Opcode_CB_03},
        {"RLC H", 2, 8, &Cpu::Opcode_CB_04},
        {"RLC L", 2, 8, &Cpu::Opcode_CB_05},
        {"RLC (HL)", 2, 16, &Cpu::Opcode_CB_06},
        {"RLC A", 2, 8, &Cpu::Opcode_CB_07},
        // 0x08 - 0x0F: RRC r
        {"RRC B", 2, 8, &Cpu::Opcode_CB_08},
        {"RRC C", 2, 8, &Cpu::Opcode_CB_09},
        {"RRC D", 2, 8, &Cpu::Opcode_CB_0A},
        {"RRC E", 2, 8, &Cpu::Opcode_CB_0B},
        {"RRC H", 2, 8, &Cpu::Opcode_CB_0C},
        {"RRC L", 2, 8, &Cpu::Opcode_CB_0D},
        {"RRC (HL)", 2, 16, &Cpu::Opcode_CB_0E},
        {"RRC A", 2, 8, &Cpu::Opcode_CB_0F},
        // 0x10 - 0x17: RL r
        {"RL B", 2, 8, &Cpu::Opcode_CB_10},
        {"RL C", 2, 8, &Cpu::Opcode_CB_11},
        {"RL D", 2, 8, &Cpu::Opcode_CB_12},
        {"RL E", 2, 8, &Cpu::Opcode_CB_13},
        {"RL H", 2, 8, &Cpu::Opcode_CB_14},
        {"RL L", 2, 8, &Cpu::Opcode_CB_15},
        {"RL (HL)", 2, 16, &Cpu::Opcode_CB_16},
        {"RL A", 2, 8, &Cpu::Opcode_CB_17},
        // 0x18 - 0x1F: RR r
        {"RR B", 2, 8, &Cpu::Opcode_CB_18},
        {"RR C", 2, 8, &Cpu::Opcode_CB_19},
        {"RR D", 2, 8, &Cpu::Opcode_CB_1A},
        {"RR E", 2, 8, &Cpu::Opcode_CB_1B},
        {"RR H", 2, 8, &Cpu::Opcode_CB_1C},
        {"RR L", 2, 8, &Cpu::Opcode_CB_1D},
        {"RR (HL)", 2, 16, &Cpu::Opcode_CB_1E},
        {"RR A", 2, 8, &Cpu::Opcode_CB_1F},
        // 0x20 - 0x27: SLA r
        {"SLA B", 2, 8, &Cpu::Opcode_CB_20},
        {"SLA C", 2, 8, &Cpu::Opcode_CB_21},
        {"SLA D", 2, 8, &Cpu::Opcode_CB_22},
        {"SLA E", 2, 8, &Cpu::Opcode_CB_23},
        {"SLA H", 2, 8, &Cpu::Opcode_CB_24},
        {"SLA L", 2, 8, &Cpu::Opcode_CB_25},
        {"SLA (HL)", 2, 16, &Cpu::Opcode_CB_26},
        {"SLA A", 2, 8, &Cpu::Opcode_CB_27},
        // 0x28 - 0x2F: SRA r
        {"SRA B", 2, 8, &Cpu::Opcode_CB_28},
        {"SRA C", 2, 8, &Cpu::Opcode_CB_29},
        {"SRA D", 2, 8, &Cpu::Opcode_CB_2A},
        {"SRA E", 2, 8, &Cpu::Opcode_CB_2B},
        {"SRA H", 2, 8, &Cpu::Opcode_CB_2C},
        {"SRA L", 2, 8, &Cpu::Opcode_CB_2D},
        {"SRA (HL)", 2, 16, &Cpu::Opcode_CB_2E},
        {"SRA A", 2, 8, &Cpu::Opcode_CB_2F},
        // 0x30 - 0x37: SWAP r
        {"SWAP B", 2, 8, &Cpu::Opcode_CB_30},
        {"SWAP C", 2, 8, &Cpu::Opcode_CB_31},
        {"SWAP D", 2, 8, &Cpu::Opcode_CB_32},
        {"SWAP E", 2, 8, &Cpu::Opcode_CB_33},
        {"SWAP H", 2, 8, &Cpu::Opcode_CB_34},
        {"SWAP L", 2, 8, &Cpu::Opcode_CB_35},
        {"SWAP (HL)", 2, 16, &Cpu::Opcode_CB_36},
        {"SWAP A", 2, 8, &Cpu::Opcode_CB_37},
        // 0x38 - 0x3F: SRL r
        {"SRL B", 2, 8, &Cpu::Opcode_CB_38},
        {"SRL C", 2, 8, &Cpu::Opcode_CB_39},
        {"SRL D", 2, 8, &Cpu::Opcode_CB_3A},
        {"SRL E", 2, 8, &Cpu::Opcode_CB_3B},
        {"SRL H", 2, 8, &Cpu::Opcode_CB_3C},
        {"SRL L", 2, 8, &Cpu::Opcode_CB_3D},
        {"SRL (HL)", 2, 16, &Cpu::Opcode_CB_3E},
        {"SRL A", 2, 8, &Cpu::Opcode_CB_3F},
        // 0x40 - 0x7F: BIT b, r instructions (b = 0 to 7)
        // 0x40 - 0x47: BIT 0, r
        {"BIT 0,B", 2, 8, &Cpu::Opcode_CB_40},
        {"BIT 0,C", 2, 8, &Cpu::Opcode_CB_41},
        {"BIT 0,D", 2, 8, &Cpu::Opcode_CB_42},
        {"BIT 0,E", 2, 8, &Cpu::Opcode_CB_43},
        {"BIT 0,H", 2, 8, &Cpu::Opcode_CB_44},
        {"BIT 0,L", 2, 8, &Cpu::Opcode_CB_45},
        {"BIT 0,(HL)", 2, 16, &Cpu::Opcode_CB_46},
        {"BIT 0,A", 2, 8, &Cpu::Opcode_CB_47},
        // 0x48 - 0x4F: BIT 1, r
        {"BIT 1,B", 2, 8, &Cpu::Opcode_CB_48},
        {"BIT 1,C", 2, 8, &Cpu::Opcode_CB_49},
        {"BIT 1,D", 2, 8, &Cpu::Opcode_CB_4A},
        {"BIT 1,E", 2, 8, &Cpu::Opcode_CB_4B},
        {"BIT 1,H", 2, 8, &Cpu::Opcode_CB_4C},
        {"BIT 1,L", 2, 8, &Cpu::Opcode_CB_4D},
        {"BIT 1,(HL)", 2, 16, &Cpu::Opcode_CB_4E},
        {"BIT 1,A", 2, 8, &Cpu::Opcode_CB_4F},
        // 0x50 - 0x57: BIT 2, r
        {"BIT 2,B", 2, 8, &Cpu::Opcode_CB_50},
        {"BIT 2,C", 2, 8, &Cpu::Opcode_CB_51},
        {"BIT 2,D", 2, 8, &Cpu::Opcode_CB_52},
        {"BIT 2,E", 2, 8, &Cpu::Opcode_CB_53},
        {"BIT 2,H", 2, 8, &Cpu::Opcode_CB_54},
        {"BIT 2,L", 2, 8, &Cpu::Opcode_CB_55},
        {"BIT 2,(HL)", 2, 16, &Cpu::Opcode_CB_56},
        {"BIT 2,A", 2, 8, &Cpu::Opcode_CB_57},
        // 0x58 - 0x5F: BIT 3, r
        {"BIT 3,B", 2, 8, &Cpu::Opcode_CB_58},
        {"BIT 3,C", 2, 8, &Cpu::Opcode_CB_59},
        {"BIT 3,D", 2, 8, &Cpu::Opcode_CB_5A},
        {"BIT 3,E", 2, 8, &Cpu::Opcode_CB_5B},
        {"BIT 3,H", 2, 8, &Cpu::Opcode_CB_5C},
        {"BIT 3,L", 2, 8, &Cpu::Opcode_CB_5D},
        {"BIT 3,(HL)", 2, 16, &Cpu::Opcode_CB_5E},
        {"BIT 3,A", 2, 8, &Cpu::Opcode_CB_5F},
        // 0x60 - 0x67: BIT 4, r
        {"BIT 4,B", 2, 8, &Cpu::Opcode_CB_60},
        {"BIT 4,C", 2, 8, &Cpu::Opcode_CB_61},
        {"BIT 4,D", 2, 8, &Cpu::Opcode_CB_62},
        {"BIT 4,E", 2, 8, &Cpu::Opcode_CB_63},
        {"BIT 4,H", 2, 8, &Cpu::Opcode_CB_64},
        {"BIT 4,L", 2, 8, &Cpu::Opcode_CB_65},
        {"BIT 4,(HL)", 2, 16, &Cpu::Opcode_CB_66},
        {"BIT 4,A", 2, 8, &Cpu::Opcode_CB_67},
        // 0x68 - 0x6F: BIT 5, r
        {"BIT 5,B", 2, 8, &Cpu::Opcode_CB_68},
        {"BIT 5,C", 2, 8, &Cpu::Opcode_CB_69},
        {"BIT 5,D", 2, 8, &Cpu::Opcode_CB_6A},
        {"BIT 5,E", 2, 8, &Cpu::Opcode_CB_6B},
        {"BIT 5,H", 2, 8, &Cpu::Opcode_CB_6C},
        {"BIT 5,L", 2, 8, &Cpu::Opcode_CB_6D},
        {"BIT 5,(HL)", 2, 16, &Cpu::Opcode_CB_6E},
        {"BIT 5,A", 2, 8, &Cpu::Opcode_CB_6F},
        // 0x70 - 0x77: BIT 6, r
        {"BIT 6,B", 2, 8, &Cpu::Opcode_CB_70},
        {"BIT 6,C", 2, 8, &Cpu::Opcode_CB_71},
        {"BIT 6,D", 2, 8, &Cpu::Opcode_CB_72},
        {"BIT 6,E", 2, 8, &Cpu::Opcode_CB_73},
        {"BIT 6,H", 2, 8, &Cpu::Opcode_CB_74},
        {"BIT 6,L", 2, 8, &Cpu::Opcode_CB_75},
        {"BIT 6,(HL)", 2, 16, &Cpu::Opcode_CB_76},
        {"BIT 6,A", 2, 8, &Cpu::Opcode_CB_77},
        // 0x78 - 0x7F: BIT 7, r
        {"BIT 7,B", 2, 8, &Cpu::Opcode_CB_78},
        {"BIT 7,C", 2, 8, &Cpu::Opcode_CB_79},
        {"BIT 7,D", 2, 8, &Cpu::Opcode_CB_7A},
        {"BIT 7,E", 2, 8, &Cpu::Opcode_CB_7B},
        {"BIT 7,H", 2, 8, &Cpu::Opcode_CB_7C},
        {"BIT 7,L", 2, 8, &Cpu::Opcode_CB_7D},
        {"BIT 7,(HL)", 2, 16, &Cpu::Opcode_CB_7E},
        {"BIT 7,A", 2, 8, &Cpu::Opcode_CB_7F},
        // 0x80 - 0x87: RES 0, r
        {"RES 0,B", 2, 8, &Cpu::Opcode_CB_80},
        {"RES 0,C", 2, 8, &Cpu::Opcode_CB_81},
        {"RES 0,D", 2, 8, &Cpu::Opcode_CB_82},
        {"RES 0,E", 2, 8, &Cpu::Opcode_CB_83},
        {"RES 0,H", 2, 8, &Cpu::Opcode_CB_84},
        {"RES 0,L", 2, 8, &Cpu::Opcode_CB_85},
        {"RES 0,(HL)", 2, 16, &Cpu::Opcode_CB_86},
        {"RES 0,A", 2, 8, &Cpu::Opcode_CB_87},
        // 0x88 - 0x8F: RES 1, r
        {"RES 1,B", 2, 8, &Cpu::Opcode_CB_88},
        {"RES 1,C", 2, 8, &Cpu::Opcode_CB_89},
        {"RES 1,D", 2, 8, &Cpu::Opcode_CB_8A},
        {"RES 1,E", 2, 8, &Cpu::Opcode_CB_8B},
        {"RES 1,H", 2, 8, &Cpu::Opcode_CB_8C},
        {"RES 1,L", 2, 8, &Cpu::Opcode_CB_8D},
        {"RES 1,(HL)", 2, 16, &Cpu::Opcode_CB_8E},
        {"RES 1,A", 2, 8, &Cpu::Opcode_CB_8F},
        // 0x90 - 0x97: RES 2, r
        {"RES 2,B", 2, 8, &Cpu::Opcode_CB_90},
        {"RES 2,C", 2, 8, &Cpu::Opcode_CB_91},
        {"RES 2,D", 2, 8, &Cpu::Opcode_CB_92},
        {"RES 2,E", 2, 8, &Cpu::Opcode_CB_93},
        {"RES 2,H", 2, 8, &Cpu::Opcode_CB_94},
        {"RES 2,L", 2, 8, &Cpu::Opcode_CB_95},
        {"RES 2,(HL)", 2, 16, &Cpu::Opcode_CB_96},
        {"RES 2,A", 2, 8, &Cpu::Opcode_CB_97},
        // 0x98 - 0x9F: RES 3, r
        {"RES 3,B", 2, 8, &Cpu::Opcode_CB_98},
        {"RES 3,C", 2, 8, &Cpu::Opcode_CB_99},
        {"RES 3,D", 2, 8, &Cpu::Opcode_CB_9A},
        {"RES 3,E", 2, 8, &Cpu::Opcode_CB_9B},
        {"RES 3,H", 2, 8, &Cpu::Opcode_CB_9C},
        {"RES 3,L", 2, 8, &Cpu::Opcode_CB_9D},
        {"RES 3,(HL)", 2, 16, &Cpu::Opcode_CB_9E},
        {"RES 3,A", 2, 8, &Cpu::Opcode_CB_9F},
        // 0xA0 - 0xA7: RES 4, r
        {"RES 4,B", 2, 8, &Cpu::Opcode_CB_A0},
        {"RES 4,C", 2, 8, &Cpu::Opcode_CB_A1},
        {"RES 4,D", 2, 8, &Cpu::Opcode_CB_A2},
        {"RES 4,E", 2, 8, &Cpu::Opcode_CB_A3},
        {"RES 4,H", 2, 8, &Cpu::Opcode_CB_A4},
        {"RES 4,L", 2, 8, &Cpu::Opcode_CB_A5},
        {"RES 4,(HL)", 2, 16, &Cpu::Opcode_CB_A6},
        {"RES 4,A", 2, 8, &Cpu::Opcode_CB_A7},
        // 0xA8 - 0xAF: RES 5, r
        {"RES 5,B", 2, 8, &Cpu::Opcode_CB_A8},
        {"RES 5,C", 2, 8, &Cpu::Opcode_CB_A9},
        {"RES 5,D", 2, 8, &Cpu::Opcode_CB_AA},
        {"RES 5,E", 2, 8, &Cpu::Opcode_CB_AB},
        {"RES 5,H", 2, 8, &Cpu::Opcode_CB_AC},
        {"RES 5,L", 2, 8, &Cpu::Opcode_CB_AD},
        {"RES 5,(HL)", 2, 16, &Cpu::Opcode_CB_AE},
        {"RES 5,A", 2, 8, &Cpu::Opcode_CB_AF},
        // 0xB0 - 0xB7: RES 6, r
        {"RES 6,B", 2, 8, &Cpu::Opcode_CB_B0},
        {"RES 6,C", 2, 8, &Cpu::Opcode_CB_B1},
        {"RES 6,D", 2, 8, &Cpu::Opcode_CB_B2},
        {"RES 6,E", 2, 8, &Cpu::Opcode_CB_B3},
        {"RES 6,H", 2, 8, &Cpu::Opcode_CB_B4},
        {"RES 6,L", 2, 8, &Cpu::Opcode_CB_B5},
        {"RES 6,(HL)", 2, 16, &Cpu::Opcode_CB_B6},
        {"RES 6,A", 2, 8, &Cpu::Opcode_CB_B7},
        // 0xB8 - 0xBF: RES 7, r
        {"RES 7,B", 2, 8, &Cpu::Opcode_CB_B8},
        {"RES 7,C", 2, 8, &Cpu::Opcode_CB_B9},
        {"RES 7,D", 2, 8, &Cpu::Opcode_CB_BA},
        {"RES 7,E", 2, 8, &Cpu::Opcode_CB_BB},
        {"RES 7,H", 2, 8, &Cpu::Opcode_CB_BC},
        {"RES 7,L", 2, 8, &Cpu::Opcode_CB_BD},
        {"RES 7,(HL)", 2, 16, &Cpu::Opcode_CB_BE},
        {"RES 7,A", 2, 8, &Cpu::Opcode_CB_BF},
        // 0xC0 - 0xC7: SET 0, r
        {"SET 0,B", 2, 8, &Cpu::Opcode_CB_C0},
        {"SET 0,C", 2, 8, &Cpu::Opcode_CB_C1},
        {"SET 0,D", 2, 8, &Cpu::Opcode_CB_C2},
        {"SET 0,E", 2, 8, &Cpu::Opcode_CB_C3},
        {"SET 0,H", 2, 8, &Cpu::Opcode_CB_C4},
        {"SET 0,L", 2, 8, &Cpu::Opcode_CB_C5},
        {"SET 0,(HL)", 2, 16, &Cpu::Opcode_CB_C6},
        {"SET 0,A", 2, 8, &Cpu::Opcode_CB_C7},
        // 0xC8 - 0xCF: SET 1, r
        {"SET 1,B", 2, 8, &Cpu::Opcode_CB_C8},
        {"SET 1,C", 2, 8, &Cpu::Opcode_CB_C9},
        {"SET 1,D", 2, 8, &Cpu::Opcode_CB_CA},
        {"SET 1,E", 2, 8, &Cpu::Opcode_CB_CB},
        {"SET 1,H", 2, 8, &Cpu::Opcode_CB_CC},
        {"SET 1,L", 2, 8, &Cpu::Opcode_CB_CD},
        {"SET 1,(HL)", 2, 16, &Cpu::Opcode_CB_CE},
        {"SET 1,A", 2, 8, &Cpu::Opcode_CB_CF},
        // 0xD0 - 0xD7: SET 2, r
        {"SET 2,B", 2, 8, &Cpu::Opcode_CB_D0},
        {"SET 2,C", 2, 8, &Cpu::Opcode_CB_D1},
        {"SET 2,D", 2, 8, &Cpu::Opcode_CB_D2},
        {"SET 2,E", 2, 8, &Cpu::Opcode_CB_D3},
        {"SET 2,H", 2, 8, &Cpu::Opcode_CB_D4},
        {"SET 2,L", 2, 8, &Cpu::Opcode_CB_D5},
        {"SET 2,(HL)", 2, 16, &Cpu::Opcode_CB_D6},
        {"SET 2,A", 2, 8, &Cpu::Opcode_CB_D7},
        // 0xD8 - 0xDF: SET 3, r
        {"SET 3,B", 2, 8, &Cpu::Opcode_CB_D8},
        {"SET 3,C", 2, 8, &Cpu::Opcode_CB_D9},
        {"SET 3,D", 2, 8, &Cpu::Opcode_CB_DA},
        {"SET 3,E", 2, 8, &Cpu::Opcode_CB_DB},
        {"SET 3,H", 2, 8, &Cpu::Opcode_CB_DC},
        {"SET 3,L", 2, 8, &Cpu::Opcode_CB_DD},
        {"SET 3,(HL)", 2, 16, &Cpu::Opcode_CB_DE},
        {"SET 3,A", 2, 8, &Cpu::Opcode_CB_DF},
        // 0xE0 - 0xE7: SET 4, r
        {"SET 4,B", 2, 8, &Cpu::Opcode_CB_E0},
        {"SET 4,C", 2, 8, &Cpu::Opcode_CB_E1},
        {"SET 4,D", 2, 8, &Cpu::Opcode_CB_E2},
        {"SET 4,E", 2, 8, &Cpu::Opcode_CB_E3},
        {"SET 4,H", 2, 8, &Cpu::Opcode_CB_E4},
        {"SET 4,L", 2, 8, &Cpu::Opcode_CB_E5},
        {"SET 4,(HL)", 2, 16, &Cpu::Opcode_CB_E6},
        {"SET 4,A", 2, 8, &Cpu::Opcode_CB_E7},
        // 0xE8 - 0xEF: SET 5, r
        {"SET 5,B", 2, 8, &Cpu::Opcode_CB_E8},
        {"SET 5,C", 2, 8, &Cpu::Opcode_CB_E9},
        {"SET 5,D", 2, 8, &Cpu::Opcode_CB_EA},
        {"SET 5,E", 2, 8, &Cpu::Opcode_CB_EB},
        {"SET 5,H", 2, 8, &Cpu::Opcode_CB_EC},
        {"SET 5,L", 2, 8, &Cpu::Opcode_CB_ED},
        {"SET 5,(HL)", 2, 16, &Cpu::Opcode_CB_EE},
        {"SET 5,A", 2, 8, &Cpu::Opcode_CB_EF},
        // 0xF0 - 0xF7: SET 6, r
        {"SET 6,B", 2, 8, &Cpu::Opcode_CB_F0},
        {"SET 6,C", 2, 8, &Cpu::Opcode_CB_F1},
        {"SET 6,D", 2, 8, &Cpu::Opcode_CB_F2},
        {"SET 6,E", 2, 8, &Cpu::Opcode_CB_F3},
        {"SET 6,H", 2, 8, &Cpu::Opcode_CB_F4},
        {"SET 6,L", 2, 8, &Cpu::Opcode_CB_F5},
        {"SET 6,(HL)", 2, 16, &Cpu::Opcode_CB_F6},
        {"SET 6,A", 2, 8, &Cpu::Opcode_CB_F7},
        // 0xF8 - 0xFF: SET 7, r
        {"SET 7,B", 2, 8, &Cpu::Opcode_CB_F8},
        {"SET 7,C", 2, 8, &Cpu::Opcode_CB_F9},
        {"SET 7,D", 2, 8, &Cpu::Opcode_CB_FA},
        {"SET 7,E", 2, 8, &Cpu::Opcode_CB_FB},
        {"SET 7,H", 2, 8, &Cpu::Opcode_CB_FC},
        {"SET 7,L", 2, 8, &Cpu::Opcode_CB_FD},
        {"SET 7,(HL)", 2, 16, &Cpu::Opcode_CB_FE},
        {"SET 7,A", 2, 8, &Cpu::Opcode_CB_FF}};

}

#endif